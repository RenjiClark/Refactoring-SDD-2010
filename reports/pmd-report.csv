"Problem","Package","File","Priority","Line","Description","Rule set","Rule"
"1","(default)","src/PolygonArea.java","3","9","All classes and interfaces must belong to a named package","Naming Rules","NoPackage"
"2","(default)","src/PolygonArea.java","3","11","Private field 'oracle' could be made final; it is only initialized in the declaration or constructor.","Design Rules","ImmutableField"
"3","(default)","src/PolygonArea.java","3","13","Parameter 'oracle' is not assigned and could be declared final","Optimization Rules","MethodArgumentCouldBeFinal"
"4","(default)","src/PolygonArea.java","3","17","Avoid variables with short names like M","Naming Rules","ShortVariable"
"5","(default)","src/PolygonArea.java","3","17","Parameter 'M' is not assigned and could be declared final","Optimization Rules","MethodArgumentCouldBeFinal"
"6","(default)","src/PolygonArea.java","3","19","Avoid variables with short names like y","Naming Rules","ShortVariable"
"7","(default)","src/PolygonArea.java","3","20","Avoid variables with short names like x","Naming Rules","ShortVariable"
"8","(default)","src/PolygonArea2.java","3","7","All classes and interfaces must belong to a named package","Naming Rules","NoPackage"
"9","(default)","src/PolygonArea2.java","3","9","Avoid unused private fields such as 'oracle'.","Unused Code Rules","UnusedPrivateField"
"10","(default)","src/PolygonArea2.java","3","9","Perhaps 'oracle' could be replaced by a local variable.","Design Rules","SingularField"
"11","(default)","src/PolygonArea2.java","3","9","Private field 'oracle' could be made final; it is only initialized in the declaration or constructor.","Design Rules","ImmutableField"
"12","(default)","src/PolygonArea2.java","3","11","Parameter 'oracle' is not assigned and could be declared final","Optimization Rules","MethodArgumentCouldBeFinal"
"13","(default)","src/PolygonArea2.java","3","15","Avoid variables with short names like M","Naming Rules","ShortVariable"
"14","(default)","src/PolygonArea2.java","3","15","Parameter 'M' is not assigned and could be declared final","Optimization Rules","MethodArgumentCouldBeFinal"
"15","polygonarea","src/polygonarea/PolygonAreaIF.java","3","4","Avoid variables with short names like M","Naming Rules","ShortVariable"
"16","polygonarea","src/polygonarea/PolygonIF.java","3","5","Avoid variables with short names like x","Naming Rules","ShortVariable"
"17","polygonarea","src/polygonarea/PolygonIF.java","3","5","Avoid variables with short names like y","Naming Rules","ShortVariable"
"18","umm.softwaredesign.polygon.controllers","src/umm/softwaredesign/polygon/controllers/RunController.java","3","33","Avoid if (x != y) ..; else ..;","Design Rules","ConfusingTernary"
"19","umm.softwaredesign.polygon.controllers","src/umm/softwaredesign/polygon/controllers/RunController.java","3","53","Avoid catching NullPointerException; consider removing the cause of the NPE.","Strict Exception Rules","AvoidCatchingNPE"
"20","umm.softwaredesign.polygon.main","src/umm/softwaredesign/polygon/main/Main.java","3","6","All methods are static.  Consider using Singleton instead.  Alternatively, you could add a private constructor or make the class abstract to silence this warning.","Design Rules","UseSingleton"
"21","umm.softwaredesign.polygon.model","src/umm/softwaredesign/polygon/model/Point.java","3","4","Avoid variables with short names like x","Naming Rules","ShortVariable"
"22","umm.softwaredesign.polygon.model","src/umm/softwaredesign/polygon/model/Point.java","3","5","Avoid variables with short names like y","Naming Rules","ShortVariable"
"23","umm.softwaredesign.polygon.model","src/umm/softwaredesign/polygon/model/Point.java","3","8","Avoid variables with short names like x","Naming Rules","ShortVariable"
"24","umm.softwaredesign.polygon.model","src/umm/softwaredesign/polygon/model/Point.java","3","8","Avoid variables with short names like y","Naming Rules","ShortVariable"
"25","umm.softwaredesign.polygon.model","src/umm/softwaredesign/polygon/model/PolygonAreaLoader.java","3","31","Avoid catching NullPointerException; consider removing the cause of the NPE.","Strict Exception Rules","AvoidCatchingNPE"
"26","umm.softwaredesign.polygon.model","src/umm/softwaredesign/polygon/model/PolygonModel.java","3","12","This class has too many methods, consider refactoring it.","Code Size Rules","TooManyMethods"
"27","umm.softwaredesign.polygon.model","tests/umm/softwaredesign/polygon/model/StudentCodeTest.java","4","4","Avoid unused imports such as 'org.junit.Assert.assertEquals'","Type Resolution Rules","UnusedImports"
"28","umm.softwaredesign.polygon.view","tests/umm/softwaredesign/polygon/view/GUITest.java","3","29","The String literal 'GeneratePolygon Panel' appears 9 times in this file; the first occurrence is on line 29","String and StringBuffer Rules","AvoidDuplicateLiterals"
"29","umm.softwaredesign.polygon.view","tests/umm/softwaredesign/polygon/view/GUITest.java","3","29","The String literal 'Side Panel' appears 15 times in this file; the first occurrence is on line 29","String and StringBuffer Rules","AvoidDuplicateLiterals"
"30","umm.softwaredesign.polygon.view","tests/umm/softwaredesign/polygon/view/GUITest.java","3","30","The String literal 'Score Panel' appears 6 times in this file; the first occurrence is on line 30","String and StringBuffer Rules","AvoidDuplicateLiterals"
"31","umm.softwaredesign.polygon.view","tests/umm/softwaredesign/polygon/view/GUITest.java","3","39","The String literal 'Actual Area' appears 5 times in this file; the first occurrence is on line 39","String and StringBuffer Rules","AvoidDuplicateLiterals"
